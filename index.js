const {Telegraf, Markup} = require('telegraf')
const {message} = require('telegraf/filters')
require('dotenv').config()
const text = require('./const')

const bot = new Telegraf(process.env.BOT_TOKEN)

const start_Menu = bot.command('start', async (ctx) => {
    try {
        await ctx.replyWithHTML(
            `<b>–ü—Ä–∏–≤–µ—Ç ${ctx.from.first_name
                ? ctx.from.first_name
                : "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"} —á—Ç–æ –≤–∞–º –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å üëá</b>`,
            Markup.inlineKeyboard([
                [
                    Markup
                        .button
                        .callback('–ö–æ–Ω—Ç–∞–∫—Ç—ã', 'contacts_panel'),
                    Markup
                        .button
                        .callback('–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã', 'payment_option')
                ],
                [
                    Markup
                        .button
                        .callback('–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º', 'our_telegramm'),
                    Markup
                        .button
                        .callback('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'info_gas')
                ]
            ])
        )
    } catch (error) {
        console.log(error)
    }
})

bot.action('contacts_panel', async(ctx) => {
    try {
        await ctx.answerCbQuery()
        await ctx.replyWithHTML(`
        ‚ö°Ô∏è–ì—É–¥–µ—Ä–º–µ—Å—Å–∫–∏–µ –ì–≠–°‚ö°Ô∏è

üìç –ê–¥—Ä–µ—Å: –≥.–ì—É–¥–µ—Ä–º–µ—Å, –®–∫–æ–ª—å–Ω–∞—è, 22

–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
–ì–≠–°: –ü–Ω –í—Ç –°—Ä –ß—Ç –ü—Ç
–ö–∞—Å—Å–∞: –ü–Ω –í—Ç –°—Ä –ß—Ç –ü—Ç –°–±
-----
üïñ 8:00-17:00
üïõ 12:00-13:00 –û–±–µ–¥

üì® E-mail: gudermes-gres@chechenergo.ru

‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞:

üì¨ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º - https://t.me/gudermesGES`, Markup.inlineKeyboard([[Markup.button.callback('‚¨ÖÔ∏è –ú–µ–Ω—é', 'back_to_menu')]]))
    } catch (error) {
        console.log(error)
    }
})

bot.action('payment_option', async(ctx) =>{
    try {
        await ctx.answerCbQuery()
        await ctx.replyWithHTML(`
‚úÖ –í –ª—é–±–æ–º –∫–∞—Å—Å–µ –ê–û "–ß–µ—á–µ–Ω—ç–Ω–µ—Ä–≥–æ"

‚úÖ –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞

‚úÖ –í –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞üëá`, Markup.inlineKeyboard([
            [Markup.button.url('–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è apple', 'https://clicks.su/9alOLV')],
            [Markup.button.url('–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è android', 'https://clicks.su/y5Bkvd')],
            [Markup.button.callback('‚¨ÖÔ∏è –ú–µ–Ω—é', 'back_to_menu')]
        ]))
    } catch (error) {
        console.log(error)
    }
})

bot.action('back_to_menu', (async ctx =>{
    try {
         await ctx.answerCbQuery()
         await ctx.replyWithHTML(
            `<b>–ü—Ä–∏–≤–µ—Ç ${ctx.from.first_name
                ? ctx.from.first_name
                : "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"} —á—Ç–æ –≤–∞–º –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å üëá</b>`,
            Markup.inlineKeyboard([
                [
                    Markup
                        .button
                        .callback('–ö–æ–Ω—Ç–∞–∫—Ç—ã', 'contacts_panel'),
                    Markup
                        .button
                        .callback('–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã', 'payment_option')
                ],
                [
                    Markup
                        .button
                        .callback('–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º', 'our_telegramm'),
                    Markup
                        .button
                        .callback('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'info_gas')
                ]
            ])
        )
    } catch (error) {
        console.log(error)
    }
}))


bot.action('our_telegramm', async(ctx) => {
    try {
        await ctx.answerCbQuery()
        await ctx.replyWithHTML(`–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º - https://t.me/gudermesGES`)
    } catch (error) {
        console.log(error)
    }
})

bot.action('info_gas', async(ctx) =>{
    try {
        await ctx.answerCbQuery()
        await ctx.replyWithHTML(`–û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è –ø–æ:`, Markup.inlineKeyboard([
            [Markup.button.callback('–¢–∞—Ä–∏—Ñ', 'gas_rate')],
            [Markup.button.url('–ö–∞–∫ —Å–Ω—è—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å —É–º–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞?', 'https://dzen.ru/a/ZEYncicD6CfJx6B5')],
            [Markup.button.callback('–ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏?', 'registration')],
            [Markup.button.callback('‚¨ÖÔ∏è –ú–µ–Ω—é', 'back_to_menu')]
        ]))
    } catch (error) {
        console.log(error)
    }
})

bot.action('gas_rate', async(ctx) => {
    try {
        await ctx.answerCbQuery()
        await ctx.replyWithHTML(`
–ö–æ–º–º–µ—Ä—Ü–∏—è - —É—Ç–æ—á–Ω—è–π—Ç–µ –≤ –ì–≠–°
~7,26 - –ù–ù  
~6,59 - –°–ù-2  

–ù–∞—Å–µ–ª–µ–Ω–∏–µ  
3,36 - –≥–æ—Ä–æ–¥  
2,35 - —Å–µ–ª–æ`, Markup.inlineKeyboard([[Markup.button.callback('‚¨ÖÔ∏è –ú–µ–Ω—é', 'back_to_menu')]]))
    } catch (error) {
        console.log(error)
    }
})
    

bot.launch()

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))